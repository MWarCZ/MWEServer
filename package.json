{
  "name": "mweserver",
  "version": "1.0.0",
  "devPlatform": "linux",
  "description": "My Workflow Engine Server for node.js.",
  "main": "dist/index.js",
  "author": "MWarCZ",
  "license": "MIT",
  "env": {
    "path": {
      "dist": "dist",
      "src": "src",
      "doc": "doc/generated",
      "coverage": "coverageX",
      "testin": "tests",
      "testout": "coverage"
    }
  },
  "scripts": {
    "env": "env | sort | grep --color '^npm_'",
    "start": "node $npm_execpath start:gql",
    "start:gql": "node $npm_package_env_path_dist/gqlServer.service.js",
    "start:runner": "node $npm_package_env_path_dist/runnerServer.service.js",
    "serve:gql": "NODE_ENV=ts ts-node $npm_package_env_path_src/gqlServer.service.ts",
    "serve:runner": "NODE_ENV=ts ts-node $npm_package_env_path_src/runnerServer.service.ts",
    "build:clean": "rm -rf $npm_package_env_path_dist",
    "prebuild": "$npm_execpath run build:clean && $npm_execpath run gen:gql",
    "build": "tsc --outDir $npm_package_env_path_dist",
    "build:watch": "$npm_execpath run build -w",
    "postbuild": "$npm_execpath copy",
    "test:clean": "rm -rf $npm_package_env_path_testout",
    "test": "NODE_ENV=ts jest --config jest.config.json --forceExit --verbose --detectOpenHandles",
    "pretest:cov": "$npm_execpath run test:clean",
    "test:cov": "jest --config jest.config.json --forceExit --coverage --verbose --detectOpenHandles --coverageDirectory $npm_package_env_path_testout",
    "test:lint": "tslint -c tslint.json -p tsconfig.test.json --format codeFrame",
    "test:watch": "$npm_execpath run test -- --watchAll",
    "test:subdir": "$npm_execpath run test -- -i $npm_package_env_path_dist/",
    "doc:clean": "rm -rf $npm_package_env_path_doc",
    "predoc": "$npm_execpath run doc:clean",
    "doc": "typedoc --options typedoc.json --out $npm_package_env_path_doc",
    "lint": "tslint -c tslint.json -p tsconfig.json --format codeFrame",
    "lint:fix": "$npm_execpath run lint --fix",
    "gen:gql": "graphql-codegen --config .graphqlconfig.yml",
    "typeorm": "ts-node node_modules/typeorm/cli.js",
    "load:ugm":"ts-node ./tests/utils/loadRes2Db.bin.ts UGM=../resources/db/UGM",
    "copy": "$npm_execpath copy:gql",
    "copy:gql": "copyfiles -u 1 'src/**/*.css' 'src/**/*.html' 'src/**/*.gql' 'src/**/*.graphql' 'src/**/*.json' $npm_package_env_path_dist",
    "clean": "$npm_execpath run build:clean; $npm_execpath run test:clean; ",
    "clean:node": "rm -rf node_modules;",
    "clean:all": "$npm_execpath run clean; $npm_execpath run clean:node;"
  },
  "devDependencies": {
    "@graphql-codegen/add": "^1.12.1",
    "@graphql-codegen/cli": "^1.11.2",
    "@graphql-codegen/typescript": "^1.11.2",
    "@graphql-codegen/typescript-resolvers": "^1.11.2",
    "@types/bcryptjs": "^2.4.2",
    "@types/jest": "^24.0.18",
    "@types/jsonwebtoken": "^8.3.8",
    "@types/node": "^13.5.0",
    "@types/passport": "^1.0.2",
    "@types/passport-http-bearer": "^1.0.34",
    "@types/passport-local": "^1.0.33",
    "@types/uuid": "^3.4.6",
    "@types/ws": "^7.2.0",
    "copyfiles": "^2.2.0",
    "jest": "^24.9.0",
    "jest-extended": "^0.11.5",
    "ts-jest": "^24.1.0",
    "ts-node": "^8.4.1",
    "tslint": "^5.20.0",
    "typedoc": "^0.15.0",
    "typescript": "^3.6.4"
  },
  "dependencies": {
    "bcryptjs": "^2.4.3",
    "fast-xml-parser": "^3.16.0",
    "graphql-import": "^0.7.1",
    "graphql-yoga": "^1.18.3",
    "jsonwebtoken": "^8.5.1",
    "mysql": "^2.18.1",
    "passport": "^0.4.1",
    "passport-http-bearer": "^1.0.1",
    "passport-local": "^1.0.0",
    "typeorm": "^0.2.22",
    "uuid": "^3.4.0",
    "vm2": "^3.8.4"
  },
	"gitHooks": {
  	"pre-commit": "lint-staged"
  },
  "lint-staged": {
    "src/**/*.{js,ts}": [
      "$npm_execpath run lint --fix",
      "#git add"
    ]
  }
}
